name: Release to DockerHub

on:
  release:
    types: [published]

env:
  REGISTRY: docker.io
  IMAGE_PREFIX: tkauati

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # precisamos de todas as refs para verificar a branch da tag

      - name: Verify tag is on correct branch
        run: |
          TAG_REF=${GITHUB_REF#refs/tags/}
          BRANCH=$(git branch -r --contains refs/tags/${TAG_REF} | grep 'origin/release/version-for-m3' || true)
          if [ -z "$BRANCH" ]; then
            echo "❌ Tag $TAG_REF não está na branch release/version-for-m3. Cancelando."
            exit 1
          else
            echo "✅ Tag $TAG_REF confirmada na branch release/version-for-m3."
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract tag version
        id: extract_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Build and push API image
        uses: docker/build-push-action@v5
        with:
          context: ./api
          file: ./api/Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/api:${{ steps.extract_version.outputs.VERSION }}

      - name: Build and push Python Modules image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./modules/Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/python-modules:${{ steps.extract_version.outputs.VERSION }}

      - name: Build and push Frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/frontend:${{ steps.extract_version.outputs.VERSION }}

      - name: Confirm Release
        run: echo "🎉 Release com tag ${{ steps.extract_version.outputs.VERSION }} publicada com sucesso!"
